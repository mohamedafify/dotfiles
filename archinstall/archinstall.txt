[internet]
        wifi-menu
        // if failed use this
        systemctl start iwd
        iwctl
        device list // get wifi adapter name
        station  "wifi-device-name" scan
        station "wifi-device-name" get-networks
        station "wifi-device-name" connect "wifi-name"

[partiton]
	[create 3 partitions]
	[size]	[type]	[name]
	512M	fat	/mnt/boot/efi	// boot
	10G	ext4	/mnt		// root
	{rest}	ext4	/mnt/home	// home
	
        mkfs.fat -F32 /dev/sda1 // boot partiton
        mkfs.ext4 /dev/sda2     // root partiton
        mkfs.ext4 /dev/sda3     // home partiton

[mounting]
        mount /dev/sda2 /mnt // mounting root parition to /mnt
        mkdir /mnt/home         // creating home in root
        mount /dev/sda2 /mnt/home       // mounting home partition to /mnt/home
        mkdir /mnt/boot/efi // creating boot dir in root
        mount /dev/sda1 /mnt/boot/efi   // mounting boot partition to /mnt/boot/efi

[installation]
        pacstrap -i /mnt $([main]Packages.txt)
        genfstab -U /mnt >> /mnt/etc/fstab // get hardware information and set it up to be mounted on boot
        arch-chroot /mnt // hop into the installed archlinux
        vim /etc/locale.gen (edit out the languages needed)
        locale-gen // generates the edited out languages
        ln -sf /usr/share/zoneinfo/$(your location) /etc/localtime //sets the localtime of the machine
        hwclock --systohc --utc // set hardware clock
        echo $(name of the computer) > /etc/hostname
        vim /etc/hosts (add $(host.txt))
        systemctl enable NetworkManager // enables networkmanager.service to be startup when the machine start
        passwd (create password for root)
        os-prober // make grub detect (other os)
        grub-install --target=x86_64-efi --bootloader-id=GRUB --efi-directory=/boot/efi  // installing grub bootloader in /boot/efi
        grub-mkconfig -o /boot/grub/grub.cfg    // creating/updating grub config file
        mkdir /boot/efi/EFI/BOOT
        cp /boot/efi/EFI/GRUB/grubx64.efi /boot/efi/EFI/BOOT/BOOTX64.EFI
        vim /boot/efi/startup.nsh (add $(startup.txt))
        umount -R /mnt
        reboot

[setting up user]
        useradd -m -g users -G wheel -s /bin/bash $(username)
        passwd $(username)
        vim visudo (uncomment "%wheel All = (All) All")

[desktop enviroment]
        sudo pacman -S $([desktop enviroment] packages.txt)
        echo "export DESKTOP_SESSION=plasma" > ~/.xinitrc
        echo "exec startplasma-x11" > ~/.xinitrc
        systemctl enable sddm
        startx



